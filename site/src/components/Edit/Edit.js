import { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";
import "./Edit.css";
import { edit } from "../../services/edit";
import { getProductById } from "../../services/getProductById";
// 1. üåü –î–æ–±–∞–≤—è–º–µ –∏–º–ø–æ—Ä—Ç –∑–∞ ReactQuill –∏ —Å—Ç–∏–ª–æ–≤–µ—Ç–µ
import ReactQuill from "react-quill-new";
import "react-quill-new/dist/quill.snow.css";


export default function Edit() {
    const navigate = useNavigate();
    const { id } = useParams();

    // 2. üìù –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–º–µ —Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ, –∫–∞–∫—Ç–æ –ø—Ä–µ–¥–∏
    const [product, setProduct] = useState({
        title: "",
        subtitle: "",
        description: "", // –¢–æ–≤–∞ —â–µ –¥—ä—Ä–∂–∏ HTML —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ
        img1: "",
    });

    const [loading, setLoading] = useState(true);

    // üü° –ó–∞—Ä–µ–∂–¥–∞–º–µ —Å—Ç–∞—Ä–∞—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    useEffect(() => {
        const fetchOffer = async () => {
            try {
                const data = await getProductById(id);
                if (data) setProduct(data); // ‚¨ÖÔ∏è –ü—Ä–æ–º–µ–Ω–µ–Ω–æ setRoom –Ω–∞ setProduct
            } catch (err) {
                console.error("Error loading article:", err);
                alert("Failed to load information.");
            } finally {
                setLoading(false);
            }
        };
        fetchOffer();
    }, [id]);

    // 3. ‚öôÔ∏è –§—É–Ω–∫—Ü–∏–∏ –∑–∞ –ø—Ä–æ–º—è–Ω–∞ –Ω–∞ —Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ
    const handleInputChange = (e) => {
        setProduct({
            ...product,
            [e.target.name]: e.target.value,
        });
    };

    // –¢–∞–∑–∏ —Ñ—É–Ω–∫—Ü–∏—è —â–µ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞ —Å–∞–º–æ –∑–∞ ReactQuill (description)
    const handleQuillChange = (value) => {
        setProduct({
            ...product,
            description: value,
        });
    };

    // 4. üß∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ —Ç—É–ª–±–∞—Ä–∞ (—Å—ä—â–∏—Ç–µ –∫–∞—Ç–æ –≤ CreateProduct)
    const modules = {
        toolbar: [
            [{ font: [] }, { size: [] }],
            ["bold", "italic", "underline", "strike"],
            [{ color: [] }, { background: [] }],
            [{ script: "sub" }, { script: "super" }],
            [{ align: [] }],
            ["blockquote", "code-block"],
            ["link", "image"],
            ["clean"]
        ],
    };

    const formats = [
        "font", "size",
        "bold", "italic", "underline", "strike",
        "color", "background",
        "script", "super", "sub",
        "align",
        "blockquote", "code-block",
        "link", "image",
    ];


    // üü¢ –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ
    const editHandler = async (e) => {
        e.preventDefault();
        try {
            // –£–≤–µ—Ä–µ—Ç–µ —Å–µ, —á–µ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ –ø—Ä–∞–≤–∏–ª–Ω–∏—è API endpoint –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ
            const result = await edit(id, product);
            alert("The article has been updated successfully!");
            navigate("/products");
        } catch (err) {
            console.error(err);
            alert("An error occured while saving.");
        }
    };

    if (loading) {
        return <p className="text-center mt-10">Loading...</p>;
    }

    return (
        <div className="login-page">
            <div className="login-box">
                <h2>Edit article</h2>

                <form onSubmit={editHandler}>
                    <div className="form-group">
                        <label>Title</label>
                        <input
                            type="text"
                            name="title"
                            placeholder="Enter article title"
                            value={product.title}
                            onChange={handleInputChange} // ‚¨ÖÔ∏è –ò–∑–ø–æ–ª–∑–≤–∞–º–µ handleInputChange
                            required
                        />
                    </div>

                    <div className="form-group">
                        <label>Subtitle</label>
                        <input
                            type="text"
                            name="subtitle"
                            placeholder="Enter article subtitle"
                            value={product.subtitle}
                            onChange={handleInputChange} // ‚¨ÖÔ∏è –ò–∑–ø–æ–ª–∑–≤–∞–º–µ handleInputChange
                            required
                        />
                    </div>

                    <div className="form-group">
                        <label>Description</label>
                        {/* 5. üöÄ –ó–∞–º–µ—Å—Ç–≤–∞–º–µ <textarea> —Å ReactQuill */}
                        <ReactQuill
                            theme="snow"
                            value={product.description} // ‚¨ÖÔ∏è product.description
                            onChange={handleQuillChange} // ‚¨ÖÔ∏è –ò–∑–ø–æ–ª–∑–≤–∞–º–µ handleQuillChange
                            modules={modules}
                            formats={formats}
                            placeholder="Enter article description..."
                            className="description-editor"
                        />
                    </div>

                    <div className="form-group">
                        <label>Image (URL)</label>
                        <input
                            type="text"
                            name="img1"
                            placeholder="Enter image link"
                            value={product.img1}
                            onChange={handleInputChange} // ‚¨ÖÔ∏è –ò–∑–ø–æ–ª–∑–≤–∞–º–µ handleInputChange
                            required
                        />
                    </div>

                    <button type="submit" className="login-btn">
                        üíæ Save changes
                    </button>
                </form>
            </div>
        </div>
    );
}